plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'com.github.johnrengelman.shadow'
}

archivesBaseName = "ServerStats-Fabric"
version = project.mod_version
group = project.mod_group + '.fabric'

repositories {
    maven { url "https://mvnrepository.com/artifact/io.prometheus" }
    maven { url 'https://masa.dy.fi/maven' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.fabric_mc}"
    mappings "net.fabricmc:yarn:${project.fabric_yarn}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "carpet:fabric-carpet:${project.fabric_mc}-${project.fabric_carpet}"

    implementation 'net.kyori:adventure-api:4.8.1'
    implementation 'net.kyori:adventure-text-serializer-gson:4.7.0'
    implementation project(':common')

    shadow project(':common')
    shadow 'net.kyori:adventure-api:4.8.1'
    shadow 'net.kyori:adventure-text-serializer-gson:4.7.0'
}


processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier 'shadow-dev'
    minimize()
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "${project.group}.${project.archivesBaseName}.shadow"
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar

remapJar {
    dependsOn shadowJar
    input.set shadowJar.archiveFile.get()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}