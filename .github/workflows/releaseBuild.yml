name: Build & Release ServerStats
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    outputs:
      version: ${{ steps.version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Version
        id: version
        run: echo "::set-output name=version::$(cat gradle.properties | awk '/mod_version/ && sub(/^.{14}/,"",$0)')"

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'

      - name: Make build.sh executable
        run: chmod +x ./scripts/build.sh

      - name: Build
        run: ./scripts/build.sh

      - uses: actions/upload-artifact@v2
        with:
          name: build_artifacts
          path: builds

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            builds/ServerStats-Fabric-${{ steps.version.outputs.version }}.jar
            builds/ServerStats-Bukkit-${{ steps.version.outputs.version }}.jar
            builds/ServerStats-Bungee-${{ steps.version.outputs.version }}.jar
            builds/ServerStats-Velocity-${{ steps.version.outputs.version }}.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  upload-artifacts:
    needs: release
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          mkdir build
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: build

      - name: Setup git upload
        run: |
          cd ./build && ls
          git init
          git remote add origin https://diced:${{ secrets.GITHUB_TOKEN }}@github.com/diced/ServerStats.git
          mv build_artifacts ../build_artifacts
      - name: Setup Git branch if stable
        run: |
          cd ./build
          git pull origin builds
          git checkout builds
          mv ../build_artifacts/* build_artifacts
      - name: Release stable build
        run: |
          cd ./build
          git add --all
          if [[ $(git diff --stat --staged) != '' ]]; then
            git commit -m "Deploy [${{ needs.release.outputs.version }}] [${{ github.sha }}]"
            git push --force --set-upstream origin builds
          else
            echo "clean, not committing"
          fi