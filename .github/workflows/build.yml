name: Build ServerStats
on:
  push:
    paths:
      - 'bukkit/**'
      - 'bungee/**'
      - 'fabric/**'
      - 'common/**'
      - '.github/**'
    branches: [ trunk ]
  pull_request:
    paths:
      - 'bukkit/**'
      - 'bungee/**'
      - 'fabric/**'
      - 'common/**'
      - '.github/**'
    branches: [ trunk ]

jobs:
  build:
    outputs:
      version: ${{ steps.version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

      - name: Get Version
        id: version
        run: echo "::set-output name=version::$(cat gradle.properties | awk '/mod_version/ && sub(/^.{12}/,"",$0)')"

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}

      - name: Make build.sh executable
        run: chmod +x ./build.sh

      - name: Build
        run: ./build.sh

      - uses: actions/upload-artifact@v2
        with:
          name: build_artifacts
          path: builds
  release:
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          mkdir build
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: build

      - name: Setup git upload
        run: |
          cd ./build && ls
          git init
          git remote add origin https://diced:${{ secrets.GITHUB_TOKEN }}@github.com/diced/ServerStats.git
          git checkout -b builds
          cd ..
      - name: Release Canary Build
        run: |
          cd ./build
          git add --all
          beginswith() { case $2 in "$1"*) true;; *) false;; esac; }
          if [[ $(git diff --stat --staged) != '' ]]; then
            if beginswith refs/tags "${{ github.ref }}"; then
              git commit -m "Deploy [${{ needs.build.outputs.version }}] [${{ github.sha }}]"
            else
              git commit -m "Deploy [${{ needs.build.outputs.version }}] [${{ github.sha }}] [UNSTABLE]"
            fi
            git push --force --set-upstream origin builds
          else
            echo "clean, not committing"
          fi
